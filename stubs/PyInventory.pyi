# PyInventory.pyi - Auto-generated .pyi file for PyInventory module

from typing import Any, List

# Class Bag (SafeBag)
class Bag:
    id: int
    name: str
    container_item: Any
    items_count: int
    is_inventory_bag: bool
    is_storage_bag: bool
    is_material_storage: bool

    def __init__(self, id: int, name: str) -> None: ...
    
    def GetItems(self) -> List[Any]: ...
    def GetItemByIndex(self, index: int) -> Any: ...
    def GetItemCount(self) -> int: ...
    def FindItemById(self, item_id: int) -> Any: ...
    def GetContext(self) -> None: ...


# Class Inventory
class PyInventory:
    def __init__(self) -> None: ...
    
    # Inventory window actions
    def OpenXunlaiWindow(self) -> None: ...
    def GetIsStorageOpen(self) -> bool: ...
    
    # Item interactions
    def PickUpItem(self, item_id: int, call_target: bool = False) -> None: ...
    def DropItem(self, item_id: int, quantity: int = 1) -> None: ...
    def EquipItem(self, item_id: int, agent_id: int) -> None: ...
    def UseItem(self, item_id: int) -> None: ...
    def DestroyItem(self, item_id: int) -> None: ...
    def IdentifyItem(self, id_kit_id: int, item_id: int) -> None: ...
    
    # Get item info
    def GetHoveredItemId(self) -> int: ...
    def GetGoldAmount(self) -> int: ...
    def GetGoldAmountInStorage(self) -> int: ...
    
    # Gold manipulation
    def DepositGold(self, amount: int) -> None: ...
    def WithdrawGold(self, amount: int) -> None: ...
    def DropGold(self, amount: int) -> None: ...
    
    # Item movement within bags
    def MoveItem(self, item_id: int, bag_id: int, slot: int, quantity: int = 1) -> None: ...
    
    # Salvage process
    def StartSalvage(self, salv_kit_id: int, item_id: int) -> None: ...
    def FinishSalvage(self) -> None: ...
    def CancelSalvage(self) -> None: ...
    def IsSalvaging(self) -> bool: ...
    def IsSalvageTransactionDone(self) -> bool: ...
