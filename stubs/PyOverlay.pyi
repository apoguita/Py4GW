# PyOverlay.pyi - Type stub for PyOverlay (PyBind11 bindings)
class Point2D:
    x: int
    y: int

    def __init__(self, x: int, y: int) -> None: ...

class Point3D:
    x: float
    y: float
    z: float

    def __init__(self, x: float, y: float, z: float) -> None: ...

class Overlay:
    def __init__(self) -> None: ...
    def RefreshDrawList(self) -> None: ...
    def GetMouseCoords(self) -> Point2D: ...
    def FindZ(self, x: float, y: float, pz: float=0) -> float: ...
    def WorldToScreen(self, x: float, y: float, z: float) -> Point2D: ...
    def GetMouseWorldPos(self) -> Point3D: ...
    def BeginDraw(self) -> None: ...
    def EndDraw(self) -> None: ...
    def DrawLine(self, from_: Point2D, to: Point2D, color: int = 0xFFFFFFFF, thickness: float = 1.0) -> None: ...
    def DrawLine3D(self, from_: Point3D, to: Point3D, color: int = 0xFFFFFFFF, thickness: float = 1.0) -> None: ...
    def DrawPoly(self, center: Point2D, radius: float, color: int = 0xFFFFFFFF, numSegments: int = 32, thickness: float = 1.0) -> None: ...
    def DrawPoly3D(self, center: Point3D, radius: float, color: int = 0xFFFFFFFF, numSegments: int = 32, thickness: float = 1.0, autoZ: bool = True) -> None: ...
    def DrawText(self, position: Point2D, text: str, color: int, centered: bool = True, scale: float = 1.0) -> None: ...
    def DrawText3D(self, position3D: Point3D, text: str, color: int, autoZ: bool = True, centered: bool = True, scale: float = 1.0) -> None: ...
    def DrawFilledTriangle3D(self, p1: Point3D, p2: Point3D, p3: Point3D, color: int) -> None: ...
    def GetDisplaySize(self) -> Point2D: ...
    def IsMouseClicked(self, button: int = 0) -> bool: ...
    def DrawQuad(self, p1: Point2D, p2: Point2D, p3: Point2D, p4: Point2D, color: int = 0xFFFFFFFF, thickness: float = 1.0) -> None: ...
    def DrawQuadFilled(self, p1: Point2D, p2: Point2D, p3: Point2D, p4: Point2D, color: int = 0xFFFFFFFF) -> None: ...
    def DrawQuad3D(self, p1: Point3D, p2: Point3D, p3: Point3D, p4: Point3D, color: int = 0xFFFFFFFF, thickness: float = 1.0) -> None: ...
    def DrawQuadFilled3D(self, p1: Point3D, p2: Point3D, p3: Point3D, p4: Point3D, color: int = 0xFFFFFFFF) -> None: ...
    
