================================================================================
Rosetta Stone: Mapping GwA2 (AutoIt) to Py4GW (Python)
================================================================================

This file provides a link between GwA2 (AutoIt) and Py4GW (Python).
Note: Py4GW is not a direct 1-to-1 translation of GwA2. Py4GW is a Python implementation based on GWCA.

This file serves as a bridge for users of GwA2, giving them a relatable basis 
to start working with Py4GW.

================================================================================
GwA2 Function - GetPing()
    Py4GW Class or Method
		Py4GW.PingHandler()
        Py4GW.PingHandler.get_current_ping()

    Description:
        In Py4GW Ping is handled by a callback and is a class that manages statistics, not just current ping.

================================================================================
GwA2 Function - GetCharname()
				DisplayAllies($aDisplay) (send your allies Ids to get their name)
				DisplayEnemies($aDisplay) (GWCA doesnt handle enemy names, data will be here when available)
				GetPlayerName($aAgent = -2)
				GetPartyPlayerNames() #run trough the ally array, unnecessary
				GetPartyLeaderName()
				GetAgentName($aAgent = -2)
    Py4GW Class or Method
		CoreLib.Agent.GetName(agent_id)
        CoreLib.Player.GetName()

    Description:
        In Py4GW you can obtain the name of players and agents available.

================================================================================
GwA2 Function - GetInstanceUpTime()
				GetMapID()
				GetMapLoading()
				GetMapIsLoaded()
				GetDistrict()
				GetRegion()
				WaitMapLoading($aMapID = 0, $aDeadlock = 10000, $skipcinematic = False)
				GetInstanceTimestamp()
				WaitForLoad()
				GetAreaVanquished()
				GetFoesKilled()
				GetFoesToKill()
    Py4GW Class or Method
		CoreLib.Map.GetMapID()
		CoreLib.Map.GetInstanceUptime()
		CoreLib.Map.IsMapReady()
		CoreLib.Map.IsOutpost()
		CoreLib.Map.IsExplorable()
		CoreLib.Map.IsMapLoading()
		CoreLib.Map.GetMapName(mapid=None)
		CoreLib.Map.GetMaxPartySize()
		CoreLib.Map.IsInCinematic()
		CoreLib.Map.SkipCinematic()
		CoreLib.Map.IsVanquishable()
		CoreLib.Map.GetFoesKilled()
		CoreLib.Map.GetFoesToKill()
		CoreLib.Map.GetDistrict()
		CoreLib.Map.GetRegion() #returns tuple
================================================================================
GwA2 Function - WriteChat($aMessage, $aSender = 'GWAÂ²')
GwA2 Function - SendWhisper($aReceiver, $aMessage)
    Py4GW Class or Method
		CoreLib.Player.SendChat('channel',"msg")
		CoreLib.Player.SendChatCommand("command")
		CoreLib.Player.SendWhisper("player name","msg")

================================================================================
GwA2 Function - GetAgentByID($aAgentID = -2)
    Py4GW Class or Method
		CoreLib.Agent.GetAgentByID(agent_id)

================================================================================
GwA2 Function - ID($aAgent = GetAgentPtr(-2))
    Py4GW Class or Method
		CoreLib.Agent.GetIDFromAgent(agent_instance)

================================================================================
GwA2 Function - X($aAgent = -2)
				Y($aAgent = -2)
				Z($aAgent = -2) #z not implemented but available from the object
				XY($aAgent = -2)
    Py4GW Class or Method
		CoreLib.Agent.GetXY(agent_id)

================================================================================
GwA2 Function - MoveX($aAgent = GetAgentPtr(-2))
				MoveY($aAgent = GetAgentPtr(-2))
    Py4GW Class or Method
		CoreLib.Agent.GetVelocityXY(agent_id)

================================================================================
GwA2 Function - GetTarget($aAgent)
    Py4GW Class or Method
		CoreLib.Player.GetTargetID() (GWCA Only handles Player Target for the moment)

================================================================================
GwA2 Function - ChangeTarget($aAgent)
    Py4GW Class or Method
		CoreLib.Player.ChangeTarget(agent_id)

================================================================================
GwA2 Function - GetAgentByPlayerName($aPlayerName)
    Py4GW Class or Method
		Not Implemented, use IDs, IDs are easier to handle

================================================================================
GwA2 Function - GetBestTarget($aRange = 1320, $CastingOnly = False, $NoHexOnly = False, $EnchantedOnly = False)
    Py4GW Class or Method
		CoreLib.Player.GetBestTarget(a_range=1320, casting_only=False, no_hex_only=False, enchanted_only=False)

================================================================================
GwA2 Function - GetBestMeleeTarget($aRange = 1320, $CastingOnly = False, $NoHexOnly = False, $EnchantedOnly = False)
	Py4GW Class or Method
		CoreLib.Player.GetBestMeleeTarget(a_range=1320, casting_only=False, no_hex_only=False, enchanted_only=False):
================================================================================
GwA2 Function - GetNearestDistance($aAllegiance = 3)
	Py4GW Class or Method
		not implemented, too niche
		functions related CoreLib.Utils.Distance, 
		CoreLib.Agents.GetNearestAlly()
		CoreLib.Agents.GetNearestNeutral()
		CoreLib.Agents.GetNearestEnemy()
		CoreLib.Agents.GetNearestSpiritPet()
		CoreLib.Agents.GetNearestMinion()
		CoreLib.Agents.GetNearestNPCMinipet()
		CoreLib.Agents.GetNearestItem()
		CoreLib.Agents.GetNearestGadget()
================================================================================
GwA2 Function - GetNearestAllyToAgent($aAgent = -2)
				GetNearestMinionAllyToAgent($aAgent = -2)
				GetNearestNPCPtrToAgent($aAgent = -2)
				GetNearestItemToAgent($aAgent = -2, $aCanPickUp = True)
				GetNearestSignpostToAgent($aAgent = -2) #Signposts are Gadgets
				GetNearestNPCToAgent($aAgent = -2)
				GetNearestEnemyToAgent($aAgent = -2)
				GetClosestInRangeOfAgent($aAgent = -2, $aRange = $spellcasting_range, $aAllegiance = $UnitTypeEnemy, $aType = $TypeUnit)
	Py4GW Class or Method
		CoreLib.Agent.GetNearestAllyToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestNeutralToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestEnemyToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestSpiritPetToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestMinionToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestNPCMinipetToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestItemToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestGadgetToAgent(agent_id, area=5000)
================================================================================
GwA2 Function - GetNearestAgentToAgent($aAgent = -2)
	Py4GW Class or Method
		not implemented, related functions
		CoreLib.Agent.GetNearestAllyToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestNeutralToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestEnemyToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestSpiritPetToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestMinionToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestNPCMinipetToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestItemToAgent(agent_id, area=5000)
		CoreLib.Agent.GetNearestGadgetToAgent(agent_id, area=5000)
================================================================================
GwA2 Function - GetNearestAgentToCoords($x, $y)
				GetNumberOfEnemiesNearXY($x, $y, $aRange = 3000)
	Py4GW Class or Method
		Not implemented, related functions
		CoreLib.Agent.GetNearestAllyXY(x, y, area=5000, player_instance=None)
		CoreLib.Agent.GetNearestNeutralXY(x, y, area=5000, player_instance=None)
		CoreLib.Agent.GetNearestEnemyXY(x, y, area=5000, player_instance=None)
		CoreLib.Agent.GetNearestSpiritPetXY(x, y, area=5000, player_instance=None)
		CoreLib.Agent.GetNearestMinionXY(x, y, area=5000, player_instance=None)
		CoreLib.Agent.GetNearestNPCMinipetXY(x, y, area=5000, player_instance=None)
		CoreLib.Agent.GetNearestItemXY(x, y, area=5000, player_instance=None)
		CoreLib.Agent.GetNearestGadgetXY(x, y, area=5000, player_instance=None)
================================================================================
GwA2 Function - GetAgentByPlayerNumber($aPlayerNumber, $aRange = 1200)
	Py4GW Class or Method
		CoreLib.Party.GetAgentIDByPlayerID(player_id) #playerid from party
================================================================================
GwA2 Function - GetAgentDistanceByPlayerNumber
	Py4GW Class or Method
		not implemented, related functions 
		CoreLib.Party.GetAgentIDByPlayerID(player_id)
		CoreLib.Utils.Distance, 
================================================================================
GwA2 Function - GetParty($aAgentArray = 0)
	Py4GW Class or Method
	not implemented, related methods 
		CoreLib.Party.GetPlayers()
		CoreLib.Party.GetHeroes()
		CoreLib.Party.GetHenchmen()
================================================================================
GwA2 Function - GetMaxPartySize($aMapID)
	Py4GW Class or Method
		CoreLib.Map.GetMaxPartySize()
================================================================================
GwA2 Function - GetAgentArray($aType = 0)
	Py4GW Class or Method
		CoreLib.Player.GetAgentArray()
		CoreLib.Player.GetAllyArray()
		CoreLib.Player.GetNeutralArray()
		CoreLib.Player.GetEnemyArray()
		CoreLib.Player.GetSpiritPetArray()
		CoreLib.Player.GetMinionArray()
		CoreLib.Player.GetNPCMinipetArray()
		CoreLib.Player.GetItemArray()
		CoreLib.Player.GetGadgetArray()
================================================================================
GwA2 Function - GetPartyDanger($aAgentArray = 0, $aParty = 0)
	Py4GW Class or Method
		not yet impleneted GWCA doesnt handle enemy targets yet
================================================================================
GwA2 Function - GetAgentDanger($aAgent, $aAgentArray = 0)
	Py4GW Class or Method
		not yet impleneted GWCA doesnt handle enemy targets yet
================================================================================
GwA2 Function - GetIsLiving($aAgent)
				GetIsMovable($aAgent)
				GetIsStatic($aAgent)
	Py4GW Class or Method
		CoreLib.Agent.IsLiving(agent_id)
		CoreLib.Agent.IsItem(agent_id)
		CoreLib.Agent.IsGadget(agent_id)
================================================================================
GwA2 Function - GetPrimaryProfession($aAgent = -2)
				GetSecondaryProfession($aAgent = -2)
				GetHeroProfession($aHeroNumber, $aSecondary = False)
	Py4GW Class or Method
		CoreLib.Agent.GetProfessions(agent_id) #returns tuple
		CoreLib.Agent.GetProfessionNames(agent_id) #returns tuple
		CoreLib.Agent.GetProfessionShortNames(agent_id) #returns tuple
		CoreLib.Agent.GetProfessionIDs(agent_id) #returns tuple
================================================================================
GwA2 Function - GetLevel($aAgent = -2)
	Py4GW Class or Method
		CoreLib.Agent.GetLevel(agent_id)
================================================================================
GwA2 Function - GetTeam($aAgent = -2)
	Py4GW Class or Method
		PvP routines not yet implemented
================================================================================
GwA2 Function - GetEnergyPips($aAgent = -2)
				GetEnergy($aAgent = -2)
	Py4GW Class or Method
		CoreLib.Agent.GetEnergy(agent_id)
		CoreLib.Agent.GetMaxEnergy(agent_id)
		CoreLib.Agent.GetEnergyRegen(agent_id)
================================================================================
GwA2 Function - GetEnergyReq($aSkill)
	Py4GW Class or Method
		CoreLib.Skill.GetName(skill_id)
		CoreLib.Skill.GetTypeName(skill_id)
		CoreLib.Skill.GetEnergyCost(skill_id)
================================================================================
GwA2 Function - GetHealth($aAgent = -2)
				GetHP($aAgent = -2)
				GetPartyHealth()
	Py4GW Class or Method
		CoreLib.Agent.GetHealth(agent_id)
		CoreLib.Agent.GetMaxHealth(agent_id)
		CoreLib.Agent.GetHealthRegen(agent_id)
================================================================================
GwA2 Function - GetIsRubberBanding($aAgentID, $aTime, $aPtr = GetAgentPtr(-2))
	Py4GW Class or Method
		not implemented, not sure how to make reliable, maybe monitoring velocity?
================================================================================
GwA2 Function - GetMoving($aAgentID)
				GetIsMoving($aAgent = GetAgentPtr(-2), $aTimer = 0)
	Py4GW Class or Method
		CoreLib.Agent.IsMoving(agent_id)
		CoreLib.Agent.GetVelocityVector(agent_id)
================================================================================
GwA2 Function - GetIsKnocked($aAgent = -2)
				GetIsAttacking($aAgent)
				GetIsCasting($aAgent)
				GetIsBleeding($aAgent)
				GetHasCondition($aAgent)
				GetIsDead($aAgent = -2)
				GetIsCrippled($aHeroNumber = 0)
				GetHasDeepWound($aAgent)
				GetIsPoisoned($aAgent)
				GetIsEnchanted($aAgent)
				GetHasDegenHex($aAgent)
				GetHasHex($aAgent)
				GetHasWeaponSpell($aAgent)
				GetIsBoss($aAgent)
				GetAgentModelID($aAgent)
	Py4GW Class or Method
		CoreLib.Agent.IsNockedDown(agent_id)
		CoreLib.Agent.IsAttacking(agent_id)
		CoreLib.Agent.IsBleeding(agent_id)
		CoreLib.Agent.IsCrippled(agent_id)
		CoreLib.Agent.IsDeepWounded(agent_id)
		CoreLib.Agent.IsPoisoned(agent_id)
		CoreLib.Agent.IsConditioned(agent_id)
		CoreLib.Agent.IsEnchanted(agent_id)
		CoreLib.Agent.IsHexed(agent_id)
		CoreLib.Agent.IsDegenHexed(agent_id)
		CoreLib.Agent.IsDead(agent_id)
		CoreLib.Agent.IsAlive(agent_id)
		CoreLib.Agent.IsWeaponSpelled(agent_id)
		CoreLib.Agent.IsInCombatStance(agent_id)
		CoreLib.Agent.IsAttacking(agent_id)
		CoreLib.Agent.IsCasting(agent_id)
		CoreLib.Agent.IsIdle(agent_id)
		CoreLib.Agent.HasBossGlow(agent_id)
		CoreLib.Agent.GetModelID(agent_id)
		
================================================================================
GwA2 Function - GetIsBurning($aHeroNumber = 0)
	Py4GW Class or Method
		not implemented
================================================================================
GwA2 Function - GetWeaponType($aAgent = -2)
				GetWieldsMartialWeapon($aAgent = -2)
	Py4GW Class or Method
		CoreLib.Agent.GetWeaponType(agent_id)
		CoreLib.Agent.IsMartial(agent_id)
		CoreLib.Agent.IsCaster(agent_id)
		CoreLib.Agent.IsMelee(agent_id)
		CoreLib.Agent.IsRanged(agent_id)
================================================================================
GwA2 Function - GetOffhandItemID($aAgent)
	Py4GW Class or Method
		CoreLib.Agent.GetWeaponExtraData(agent_id) #returns tuple
================================================================================
GwA2 Function - GetSkillID($aAgent)
	Py4GW Class or Method
		CoreLib.Agent.GetCastingSkill(agent_id)
================================================================================
GwA2 Function - GetPartyLeader()
	Py4GW Class or Method
		CoreLib.Party.GetPartyLeaderID()
================================================================================
GwA2 Function - GetMyID()
	Py4GW Class or Method
		CoreLib.Player.GetPlayerID() #agent id of the player
================================================================================
GwA2 Function - GetCanPickUp($aAgent)
	Py4GW Class or Method
		not implemented, unnecessary
================================================================================

GwA2 Function - GetAssignedToMe($aAgent)
	Py4GW Class or Method
		CoreLib.Player.GetOwnerID() #owner of the agent
================================================================================
GwA2 Function - GetMaxAgents()
				GetNumberOfAllies($aRange = 5000) #prefilter array with range FilterAgentArrayByRange
	Py4GW Class or Method
		not implemented, use python functionality with any array, filtered or unfiltered
		len(agent_array)
================================================================================
GwA2 Function - GetCurrentTarget()
				GetCurrentTargetID()
	Py4GW Class or Method
		CoreLib.Player.GetTargetID() #agent id of the player
================================================================================
GwA2 Function - GetNumberOfFoesInRangeOfAgent($aAgent = -2, $aRange = 1250, $aPlayerNumber = 0)
				GetCountInRangeOfAgent($aAgent = -2, $aRange = $spellcasting_range, $aAllegiance = $UnitTypeEnemy, $aType = $TypeUnit)
				GetNumberOfEnemies($aRange = 3000)
				GetNumberOfEnemiesNearAgent($aRange = 3000, $aAgent = -2)
				GetNumberOfAlliesNearXY($x, $y, $aRange = 3000, $aAllegiance = 0)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentArrayByRange(agent_pos,agent_array, area=5000)
		len(agent_array)
		#use it to filter any agent array by area
================================================================================
GwA2 Function - GetNumberOfMovingEnemies($aAgent = -2, $aRange = 3000)
				GetNumberOfMovingEnemiesNearXY($x, $y, $aRange = 3000)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentArrayByMoving(agent_pos, agent_array, area=5000)
		len(agent_array)
		#pass any agent array 
================================================================================
GwA2 Function - GetNumberOfDeadAllies($aRange = 5000)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentArrayByDead(agent_pos, agent_array, area=5000)
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function -  GetNumberOfConditionedAllies($aRange = 5000)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentArrayByIsConditioned(agent_pos, agent_array, area=5000)
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function -  GetNumberOfBleedingAllies($aRange = 5000)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentArrayByIsBleeding(agent_pos, agent_array, area=5000)
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function -  GetNumberOfPoisonedAllies($aRange = 5000)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentArrayByIsPoisoned(agent_pos, agent_array, area=5000)
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function -  GetNumberOfDeepWoundedAllies($aRange = 5000)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentByIsDeepWounded(agent_pos, agent_array, area=5000)
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function -  GetNumberOfCrippledHeroes($aRange = 5000)
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterAgentArrayByIsCrippled(agent_pos, agent_array, area=5000)
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function -  GetNumberOfBurningHeroes($aRange = 5000)
	Py4GW Class or Method
		not implemented yet
================================================================================
GwA2 Function - GetNumberOfMinionAllies($aRange = 5000)
				GetMyMinionCount($aRange = 5000) #filter array by owner_id
				GetNumberOfSpiritAllies($aRange = 5000) #filter Spirit Array By Owner
				GetMySpiritCount()
				GetMySpiritCount_($aRange = $Spirit_Range)
	Py4GW Class or Method
		len(CoreLib.Player.GetMinionArray())
		agent_array = CoreLib.Utils.FilterArrayByOwnerID(agent_pos, agent_array, area=5000)
		len(agent_array)
================================================================================
GwA2 Function -  GetNumberOfSpirits($aRange = 5000, $Offensive = True, $Defensive = True)
				NumberOfPressureSpirits($aRange = 5000) #filter by owner 0 then categorize each spirit WIP
	Py4GW Class or Method
		agent_array = CoreLib.Player.GetSpiritPetArray()
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function - GetNumberOfBosses($aRange = 3000)
				GetNumberOfDeadBosses($aRange = 3000) #filter isdead also
	Py4GW Class or Method
		agent_array = CoreLib.Utils.FilterArrayByHasBossGlow(agent_pos, agent_array, area=5000)
		len(agent_array)
		#feed any agent array
================================================================================
GwA2 Function - IsSpiritAgent($aAgent)
	Py4GW Class or Method
		CoreLib.Agent.IsSpirit(agent_id)
================================================================================
GwA2 Function - IsMinionAgent($aAgent)
	Py4GW Class or Method
		CoreLib.Agent.IsMinion(agent_id)
================================================================================
GwA2 Function - AddHero($aHeroId)
				KickHero($aHeroId)
				KickAllHeroes()
				AddNpc($aNpcId)
				KickNpc($aNpcId)
				InvitePlayer($aPlayerName)
				LeaveGroup($aKickHeroes = True)
	Py4GW Class or Method
		CoreLib.Party.AddHero(hero_id)
		CoreLib.Party.KickHero(hero_id)
		CoreLib.Party.KickAllHeroes()
		CoreLib.Party.AddHenchman(henchman_id)
		CoreLib.Party.KickHenchman(henchman_id)
		CoreLib.Party.InvitePlayer(player_id_or_name)
		CoreLib.Party.KickPlayer(player_id)
		CoreLib.Party.LeaveParty()
================================================================================
GwA2 Function - CancelHero($aHeroNumber)
				CancelAll()
				ClearPartyCommands()
				CommandHero($aHeroNumber, $aX, $aY)
				CommandAll($aX, $aY, $WaitForDestination = False, $aDistanceToDestination = $adjacent_range)
				SetHeroAggression($aHeroNumber, $aAggression) ;0=Fight, 1=Guard, 2=Avoid
				UseHeroSkill($aHero, $aSkillSlot, $aTarget = 0, $WaitForRecharge = False, $aTimeout = 8000)
				UseHeroSkill_old($aHero, $aSkillSlot, $aTarget = 0)
	Py4GW Class or Method
		CoreLib.Party.FlagHero (hero_id, x, y)
		CoreLib.Party.FlagAllHeroes(x, y)
		CoreLib.Party.UnflagHero(hero_id)
		CoreLib.Party.UnflagAllHeroes()
		CoreLib.Party.SetHeroBehavior (hero_agent_id, behavior)
		CoreLib.Party.SetPetBehavior(behavior, lock_target_id)
		CoreLib.Party.HeroUseSkill(target_agent_id, skill_number, hero_number)
================================================================================
GwA2 Function - SwitchMode($aMode)
	Py4GW Class or Method
		CoreLib.Party.SetHardMode()
		CoreLib.Party.SetNormalMode()
		CoreLib.Party.IsHardMode()
		CoreLib.Party.IsNormalMode()
================================================================================
GwA2 Function - Resign()
				ResignAndReturn($aMapID = 0, $aLanguage = GetLanguage(), $aRegion = GetRegion())
	Py4GW Class or Method
		CoreLib.Player.SendChatCommand("resign")
		CoreLib.Player.ReturnToOutpost()
================================================================================
GwA2 Function - SkipCinematic()
				ConditionalSkipCinematic()
	Py4GW Class or Method
		CoreLib.Map.IsInCinematic()
		CoreLib.Map.SkipCinematic()
================================================================================
GwA2 Function - GetPartySize()
				GetPlayerPartySize()
				GetIsHardMode()
				GetPartyDefeated()
				GetHeroCount()
				GetPartyState($aFlag)
				GetHeroID($aHeroNumber)
				GetHeroNumberByAgentID($aAgentID)
				GetHeroNumberByHeroID($aHeroId)
	Py4GW Class or Method
		CoreLib.Party.IsTicked()
		CoreLib.Party.SetTickasToggle(enable)
		CoreLib.Party.SetTicked(ticked)
		CoreLib.Party.SetTicked(ticked)
		CoreLib.Party.ToggleTicked()
		CoreLib.Party.IsPartyDefeated()
		CoreLib.Party.IsPartyLoaded()
		CoreLib.Party.IsPartyLeader()
		CoreLib.Party.PartySize()
		CoreLib.Party.PlayerCount()
		CoreLib.Party.HeroCount()
		CoreLib.Party.HenchmanCount()
		CoreLib.Party.SearchParty(search_type, advertisement)
		CoreLib.Party.SearchPartyCancel()
		CoreLib.Party.SearchPartyReply(accept)
		CoreLib.Party.RespondToPartyRequest(party_id, accept)
		CoreLib.Party.GetAgentIDByLoginNumber(login_number)
		CoreLib.Party.GetHeroAgentID(hero_index)
		CoreLib.Party.GetAgentHeroID(agent_id)
		CoreLib.Party.InvitePlayer(player_id_or_name)
		CoreLib.Party.KickPlayer(player_id)
		CoreLib.Party.LeaveParty()
================================================================================
GwA2 Function - Move($aX, $aY, $aRandom = 50)
				move_($aX, $aY)
	Py4GW Class or Method
		CoreLib.Player.Move(x, y)
================================================================================
GwA2 Function - OpenChestByExtraType($ExtraType)
				OpenChestNoLockpick()
				OpenChest()
	Py4GW Class or Method
		CoreLib.Player.OpenLockedChest(use_key=False)
================================================================================
GwA2 Function - MoveTo($aX, $aY, $aRandom = 50)
				MoveTo_alt($aX, $aY, $aRandom = 50, $aMe = GetAgentPtr(-2), $aMaintenanceFunc = Null)
				MoveTo_($aX, $aY, $aRandom = 50, $aMyID = GetMyID(), $aMe = GetAgentPtr($aMyID))
				RandomMoveTo($x, $y, $aRandom = 50, $StopsMin = 1, $StopsMax = 5, $Stops = -1)
				GoToNPC($npc = GetNearestNPCPtrToAgent(-2), $Interact = True)
				GoToNPC_Legacy($aAgent)
				GoToNPCNearXY($x, $y, $aPlayerID = 0, $Interact = True) 
				GoToSignpost($aAgent)
				GoToSignpostNearXY($x, $y)
	Py4GW Class or Method
		CoreLib.Player.Routines.Movement.FollowXY #it is an entire class with defined behavior and stastistics
		CoreLib.Player.Routines.Movement.FollowXY.calculate_distance(self, pos1, pos2)
		CoreLib.Player.Routines.Movement.FollowXY.Move(self, x, y, tolerance=100)
		CoreLib.Player.Routines.Movement.FollowXY.Reset(self)
		CoreLib.Player.Routines.Movement.FollowXY.Update(self)
		CoreLib.Player.Routines.Movement.FollowXY.GetElapsedTime(self)
		CoreLib.Player.Routines.Movement.FollowXY.SetWaypoint(self, x, y)
		CoreLib.Player.Routines.Movement.FollowXY.GetWaypoint(self)
		CoreLib.Player.Routines.Movement.FollowXY.GetDistanceToWaypoint(self)
		CoreLib.Player.Routines.Movement.FollowXY.GetIsFollowing(self)
		CoreLib.Player.Routines.Movement.FollowXY.GetHasArrived(self)
================================================================================
GwA2 Function - GoPlayer($aAgent)
				GoNPC($aAgent = GetNearestNPCToAgent(-2))
				GoSignpost($aAgent)
				Attack($aAgent, $aCallTarget = False)
				CallTarget($aTarget)
				SurvivePickup($iMaxDist = 5000, $PickupTorch = False) #too niche
	Py4GW Class or Method
		CoreLib.Player.Interact(agent_id, call_target=False)
================================================================================
GwA2 Function - CloseAllPanels()
				ToggleHeroWindow()
				ToggleInventory()
				ToggleAllBags()
				ToggleWorldMap()
				ToggleOptions()
				ToggleQuestWindow()
				ToggleSkillWindow()
				ToggleMissionMap()
				ToggleFriendList()
				ToggleGuildWindow()
				TogglePartyWindow()
				ToggleScoreChart()
				ToggleLayoutWindow()
				ToggleMinionList()
				ToggleHeroPanel($aHero)
				ToggleHeroPetPanel($aHero)
				TogglePetPanel()
				ToggleHelpWindow()
				MakeScreenshot()
				ToggleLanguage()
				LockHeroTarget($aHeroNumber, $aAgentID = 0)
				DisableHeroSkillSlot($aHeroNumber, $aSkillSlot)
				EnableHeroSkillSlot($aHeroNumber, $aSkillSlot)
				TurnLeft($aTurn)
				TurnRight($aTurn)
				MoveBackward($aMove)
				MoveForward($aMove)
				StrafeLeft($aStrafe)
				StrafeRight($aStrafe)
				ToggleAutoRun()
				ReverseDirection()
				ChangeWeaponSet($aSet)
				ChangeWeaponSetByPacket($aSet)
				CancelAction()
				ActionInteract()
				ActionFollow()
				DropBundle()
				DropHeroBundle($aHeroNumber)
				SuppressAction($aSuppress)
				ClearTarget()
				TargetNearestEnemy()
				TargetNextEnemy()
				TargetPartyMember($aNumber)
				TargetPreviousEnemy()
				TargetCalledTarget()
				TargetSelf()
				TargetNearestAlly()
				TargetNearestItem()
				TargetNextItem()
				TargetPreviousItem()
				TargetNextPartyMember()
				TargetPreviousPartyMember()

	Py4GW Class or Method
		Send The correspondent game Keybind
		CoreLib.Keystroke.Press(CoreLib.Key.W)
		CoreLib.Keystroke.Release(CoreLib.Key.W)
		CoreLib.Keystroke.PressAndRelease(CoreLib.Key.I)
		CoreLib.Keystroke.PressCombo(CoreLib.Key.I)
		CoreLib.Keystroke.ReleaseCombo(CoreLib.Key.I)
		CoreLib.Keystroke.PressAndReleaseCombo(CoreLib.Key.I)
================================================================================
GwA2 Function - MoveIfHurt($aMe = GetAgentPtr(-2))
				MoveToDistanceAwayfromAgent($aDistance, $aAgent)
				MoveToClosestXYtoWaypointInRangeOfAgent($wpX, $wpY, $aDistance, $aAgent)
				GetClosestXYinRangeOfAgent($aDistance, $aAgent, $sectors = 100)
				GetClosestXYtoWaypointInRangeofAgent($wpX, $wpY, $aDistance, $aAgent, $sectors = 100)
				GetAllXYinRangeOfAgent($aDistance, $aAgent, $sectors = 360)
	Py4GW Class or Method
		Most of the Movement functions in GWa2 are too specific to deserve a reimplmentation
		here you can see the ones athat are implemented as example, all the bases for 
		movement function in Py4GW are based on Vector Fields theory, refer to the code for more.
		
		CoreLib.Player.Routines.Movement.MoveIfHurt(threshold=0.7, FollowXY_Instance=None)
================================================================================
GwA2 Function - RndSleep($aAmount, $aRandom = 0.05)
				TolSleep($aAmount = 150, $aTolerance = 50)
				Pingsleep($msextra = 0)
    Py4GW Class or Method
		Not Implemented, gameloop functions different
		See class Timer for similar fuctionaliy
================================================================================
GwA2 Function - ComputeDistance($aX1, $aY1, $aX2, $aY2)
				GetDistance($aAgent1 = GetNearestAgentPtr(-2), $aAgent2 = GetAgentPtr(-2))
				GetDistanceToXY($x, $y, $aAgent = -2)
				ComputePseudoDistance($aX1, $aY1, $aX2, $aY2)
				GetPseudoDistance($aAgent1, $aAgent2)
    Py4GW Class or Method
		CoreLib.Utils.Distance (pos1, pos2)
================================================================================
GwA2 Function - UseSkill($aSkillSlot, $aTarget, $aCallTarget = False)
				UseskillEX($aSkillSlot, $aTarget = -2, $aTimeout = 6000, $aSkillbarPtr = GetSkillbarPtr(0))
    Py4GW Class or Method
		CoreLib.Skillbar.UseSkill(skill_slot, target_agent_id=0)
================================================================================
GwA2 Function - LoadSkillBar($aSkill1 = 0, $aSkill2 = 0, $aSkill3 = 0, $aSkill4 = 0, $aSkill5 = 0, $aSkill6 = 0, $aSkill7 = 0, $aSkill8 = 0, $aHeroNumber = 0)
				LoadSkillTemplate($aTemplate, $aHeroNumber = 0)
				GetSkillbar($aHeroNumber = 0)
				GetSkillbarSkillID($aSkillSlot, $aHeroNumber = 0)
				GetSkillbarSkillAdrenaline($aSkillSlot, $aHeroNumber = 0, $aSkillbarPtr = GetSkillbarPtr($aHeroNumber))
				GetSkillByID($aSkillID)
				GetSkillTimer()
				IsRecharged($aSkillSlot, $aHeroNumber = 0, $aSkillbarPtr = GetSkillbarPtr($aHeroNumber))
				SkillAttribute($aSkill)
	Py4GW Class or Method
		CoreLib.Skillbar.LoadSkillTemplate(skill_template)
		CoreLib.Skillbar.GetSkillData(skill_id)
		CoreLib.Skillbar.GetSkillDataBySlot(skill_slot)
		CoreLib.Skillbar.GetSkillSlot(skill_id)		
		CoreLib.Skillbar.Skill.GetName(skill_id) 
		CoreLib.Skillbar.Skill.GetType(skill_id) 
		CoreLib.Skillbar.Skill.GetCampaign(skill_id) 
		CoreLib.Skillbar.Skill.GetSpecial(skill_id) 
		CoreLib.Skillbar.Skill.GetComboReq(skill_id) 
		CoreLib.Skillbar.Skill.GerEffect1(skill_id) 
		CoreLib.Skillbar.Skill.GetEffect2(skill_id) 
		CoreLib.Skillbar.Skill.GetCondition(skill_id) 
		CoreLib.Skillbar.Skill.GetWeaponReq(skill_id) 
		CoreLib.Skillbar.Skill.GetProfession(skill_id) 
		CoreLib.Skillbar.Skill.GetAttribute(skill_id) 
		CoreLib.Skillbar.Skill.GetTitle(skill_id) 
		CoreLib.Skillbar.Skill.GetIDPVP(skill_id) 
		CoreLib.Skillbar.Skill.GetCombo(skill_id) 
		CoreLib.Skillbar.Skill.GetTarget(skill_id) 
		CoreLib.Skillbar.Skill.GetSkillEquipType(skill_id) 
		CoreLib.Skillbar.Skill.GetOvercast(skill_id) 
		CoreLib.Skillbar.Skill.GetEnergyCost(skill_id) 
		CoreLib.Skillbar.Skill.GetHealthCost(skill_id) 
		CoreLib.Skillbar.Skill.GetAdrenaline(skill_id) 
		CoreLib.Skillbar.Skill.GetActivation(skill_id) 
		CoreLib.Skillbar.Skill.GetAftercast(skill_id) 
		CoreLib.Skillbar.Skill.GetDuration0(skill_id) 
		CoreLib.Skillbar.Skill.GetDuration15(skill_id) 
		CoreLib.Skillbar.Skill.GetRecharge(skill_id) 
		CoreLib.Skillbar.Skill.GetSkillArguments(skill_id) 
		CoreLib.Skillbar.Skill.GetScale0(skill_id) 
		CoreLib.Skillbar.Skill.GetScale15(skill_id) 
		CoreLib.Skillbar.Skill.GetBonusScale0(skill_id) 
		CoreLib.Skillbar.Skill.GetBonusScale15(skill_id) 
		CoreLib.Skillbar.Skill.GetAoERange(skill_id) 
		CoreLib.Skillbar.Skill.GetConstEffect(skill_id) 
		CoreLib.Skillbar.Skill.GetCasterOverheadAnimationID(skill_id) 
		CoreLib.Skillbar.Skill.GetCasterBodyAnimationID(skill_id) 
		CoreLib.Skillbar.Skill.GetTargetBodyAnimationID(skill_id) 
		CoreLib.Skillbar.Skill.GetTargetOverheadAnimationID(skill_id) 
		CoreLib.Skillbar.Skill.GetProjectileAnimation1ID(skill_id) 
		CoreLib.Skillbar.Skill.GetProjectileAnimation2ID(skill_id) 
		CoreLib.Skillbar.Skill.GetIconFileID(skill_id) 
		CoreLib.Skillbar.Skill.GetIconFileID2(skill_id) 
		CoreLib.Skillbar.Skill.GetNameID(skill_id) 
		CoreLib.Skillbar.Skill.GetConcise(skill_id) 
		CoreLib.Skillbar.Skill.GetDescriptionID(skill_id) 
		CoreLib.Skillbar.Skill.IsTouchRange(skill_id) 
		CoreLib.Skillbar.Skill.IsElite(skill_id) 
		CoreLib.Skillbar.Skill.IsHalfRange(skill_id) 
		CoreLib.Skillbar.Skill.IsPvP(skill_id) 
		CoreLib.Skillbar.Skill.IsPvE(skill_id) 
		CoreLib.Skillbar.Skill.IsPlayable(skill_id) 
		CoreLib.Skillbar.Skill.IsStacking(skill_id) 
		CoreLib.Skillbar.Skill.IsNonStacking(skill_id) 
		CoreLib.Skillbar.Skill.IsUnused(skill_id) 
		CoreLib.Skillbar.Skill.GetAdrenalineA(skill_id) 
		CoreLib.Skillbar.Skill.GetAdrenalineB(skill_id) 
================================================================================
GwA2 Function - DropBuff($aSkillID, $aAgentID, $aHeroNumber = 0)
				GetEffect($aSkillID = 0, $aHeroNumber = 0)
				GetEffectsPtr($aSkillID = 0, $aHeroNumber = 0, $aHeroId = GetHeroID($aHeroNumber))
				HasEffect($aEffectSkillID, $aHeroNumber = 0, $aHeroId = GetHeroID($aHeroNumber))
				GetSkillEffectPtr($aSkillID, $aHeroNumber = 0, $aHeroId = GetHeroID($aHeroNumber))
				GetSkillEffectPtrByEffectnumber($aEffectNumber, $aHeroNumber = 0, $aHeroId = GetHeroID($aHeroNumber))
				PrintHeroEffects($heronumber = 0)
				SkillEffectID($aSkillEffect)
				GetEffectTimeRemaining($aEffect)
				GetBuffCount($aHeroNumber = 0)
				GetIsTargetBuffed($aSkillID, $aAgentID, $aHeroNumber = 0)
				GetBuffByIndex($aBuffNumber, $aHeroNumber = 0)
	Py4GW Class or Method
		CoreLib.Buffs.DropBuff(buff_id)
		CoreLib.Buffs.GetBuffs(agent_id: int)
		CoreLib.Buffs.GetEffects(agent_id: int)
		CoreLib.Buffs.GetBuffCount(agent_id: int)
		CoreLib.Buffs.GetEffectCount(agent_id: int)
		CoreLib.Buffs.BuffExists(agent_id: int, skill_id: int)
		CoreLib.Buffs.EffectExists(agent_id: int, skill_id: int)
		CoreLib.Buffs.GetBuffsAndEffects(agent_id: int)
================================================================================
GwA2 Function - TravelTo($aMapID, $aLanguage = GetLanguage(), $aRegion = GetRegion())
				TravelGH()
				LeaveGH()
	Py4GW Class or Method
		CoreLib.Map.Travel(map_id)
		more methods exists but no getters are implemented
================================================================================
GwA2 Function - ReturnToOutpost()
	Py4GW Class or Method
		CoreLib.Party.ReturnToOutpost()
================================================================================
GwA2 Function - EnterChallenge()
				EnterChallengeForeign()
	Py4GW Class or Method
		CoreLib.Map.EnterChallenge()
		CoreLib.Map.HasEnterChallengeButton()
		CoreLib.Map.CancelEnterChallenge()
================================================================================
GwA2 Function - AcceptQuest($aQuestID)
				QuestReward($aQuestID)
				Dialog($aDialogID, $skipcinematic = False, $aDeadlock = 1000)
				Dialog2($aDialogID, $aDeadlock = 1000)
				GetDwarvenBlessing($x, $y)
				GetAsuranBlessing($x, $y)
				GetNornBlessing($x, $y)
				GetVanguardBlessing($x, $y)
				GetSunspearsBlessing($x, $y)
				GetLightBringerBlessing($x, $y)
	Py4GW Class or Method
		CoreLib.Player.SendDialog(dialog_id) 
		CoreLib.Player.SendChatCommand("dialog take") #will accept any dialog presented, more parameters available
================================================================================
GwA2 Function - StartSalvage($aItem, $aCheap = False)
				BagID($aBag)
				SalvageMaterials()
				SalvageMod($aModIndex) #deactivate confirmation on toolbox
				IdentifyItem($aItem)
				IdentifyBag($aBag, $aWhites = False, $aGolds = True)
				IdentifyBags($UseBags = 4)
				EquipItem($aItem)
				EquipItembyModelID($modelid)
				UseItem($aItem)
				PickUpItem($aItem)
				DropItem($aItem, $aAmount = 0)
				MoveItem($aItem, $aBag, $aSlot)
				DropGold($aAmount = 0)
				DepositGold($aAmount = 0)
				WithdrawGold($aAmount = 0)
				DestroyItem($aItem, $aAmount = 250)
				GetItemIDfromModelID($aModelID)
				GetBagNumberByItemID($aItemID)
				ItemID($aItem)
				GetItemBySlot($aBag, $aSlot) #this function is not possible in Py4GW
				GetInventoryItemPtrByModelId($aModelID) #this function is not possible in Py4GW
				GetBagItemIDArrayByModelID($aModelID) 
				GetMaxSlots($aBag)
				GetRarity($aItem)
				GetItemValue($aItem)
				GetQuantity($aItem)
				GetIsIDed($aItem)
				GetIsUnIDed($aItem)
				GetIsUpgraded($lItemPtr)
				GetItemReq($aItem)
				GetItemAttribute($aItem)
				GetItemMaxDmg($aItem)
				GetModByIdentifier($aItem, $aIdentifier)
				GetModStruct($aItem)
				GetBag($aBag)
				CountItemInBagsByModelID($ItemModelID)
				GetItemByItemID($aItemID)
				GetItemByAgentID($aAgentID)
				GetItemByModelID($aModelID)
	Py4GW Class or Method
		Here is a list of all the method names in the `Inventory` class:

				CoreLib.Inventory.GetInventorySpace()`
				CoreLib.Inventory.GetFreeSlotCount()`
				CoreLib.Inventory.GetItemCount(item_id)`
				CoreLib.Inventory.GetModelCount(model_id)`
				CoreLib.Inventory.GetFirstIDKit()`
				CoreLib.Inventory.GetFirstUnidentifiedItem()`
				CoreLib.Inventory.GetFirstSalvageKit()`
				CoreLib.Inventory.GetFirstSalvageableItem()`
				CoreLib.Inventory.IdentifyFirst()`
				CoreLib.Inventory.SalvageFirst()`
				CoreLib.Inventory.IsInSalvageSession()`
				CoreLib.Inventory.IsSalvageSessionDone()`
				CoreLib.Inventory.FinishSalvage()`
				CoreLib.Inventory.OpenXunlaiWindow()`
				CoreLib.Inventory.IsStorageOpen()`
				CoreLib.Inventory.PickUpItem(item_id, call_target=False)`
				CoreLib.Inventory.DropItem(item_id, quantity=1)`
				CoreLib.Inventory.EquipItem(item_id, agent_id)`
				CoreLib.Inventory.UseItem(item_id)`
				CoreLib.Inventory.DestroyItem(item_id)`
				CoreLib.Inventory.GetHoveredItemId(item_id)`
				CoreLib.Inventory.GetGoldOnCharacter()`
				CoreLib.Inventory.GetGoldInStorage()`
				CoreLib.Inventory.DepositGold(amount)`
				CoreLib.Inventory.WithdrawGold(amount)`
				CoreLib.Inventory.DropGold(amount)`
				CoreLib.Inventory.MoveItem(item_id, bag_id, slot, quantity=1)`
				CoreLib.Inventory.GetItemIdFromModelID(model_id)
				CoreLib.Inventory.GetBagSlotByModelID($aModelID)
				CoreLib.Inventory.GetBagNumberByItemID(item_id)
				CoreLib.Inventory.Item.GetItemIdFromModelID(model_id)`
				CoreLib.Inventory.Item.GetBagNumberByItemID(item_id)`
				CoreLib.Inventory.Item.GetModelID(item_id)`
				CoreLib.Inventory.Item.GetRarity(item_id)`
				CoreLib.Inventory.Item.GetAgentId(item_id)`
				CoreLib.Inventory.Item.GetItemByAgentId(agent_id)
				CoreLib.Inventory.Item.GetModifiersCount(item_id)`
				CoreLib.Inventory.Item.GetModifiers(item_id)`
				CoreLib.Inventory.Item.IsCustomized(item_id)`
				CoreLib.Inventory.Item.GetItemType(item_id)`
				CoreLib.Inventory.Item.GetDyeInfo(item_id)`
				CoreLib.Inventory.Item.GetValue(item_id)`
				CoreLib.Inventory.Item.GetInteraction(item_id)`
				CoreLib.Inventory.Item.GetItemFormula(item_id)`
				CoreLib.Inventory.Item.IsMaterialSalvageable(item_id)`
				CoreLib.Inventory.Item.GetQuantity(item_id)`
				CoreLib.Inventory.Item.IsEquipped(item_id)`
				CoreLib.Inventory.Item.GetProfession(item_id)`
				CoreLib.Inventory.Item.GetSlot(item_id)`
				CoreLib.Inventory.Item.IsStackable(item_id)`
				CoreLib.Inventory.Item.IsInscribable(item_id)`
				CoreLib.Inventory.Item.IsMaterial(item_id)`
				CoreLib.Inventory.Item.IsZCoin(item_id)`
				CoreLib.Inventory.Item.GetUses(item_id)`
				CoreLib.Inventory.Item.IsIDKit(item_id)`
				CoreLib.Inventory.Item.IsSalvageKit(item_id)`
				CoreLib.Inventory.Item.IsTome(item_id)`
				CoreLib.Inventory.Item.IsLesserKit(item_id)`
				CoreLib.Inventory.Item.IsExpertSalvageKit(item_id)`
				CoreLib.Inventory.Item.IsPerfectSalvageKit(item_id)`
				CoreLib.Inventory.Item.IsWeapon(item_id)`
				CoreLib.Inventory.Item.IsArmor(item_id)`
				CoreLib.Inventory.Item.IsSalvageable(item_id)`
				CoreLib.Inventory.Item.IsInventoryItem(item_id)`
				CoreLib.Inventory.Item.IsStorageItem(item_id)`
				CoreLib.Inventory.Item.IsRareMaterial(item_id)`
				CoreLib.Inventory.Item.IsOfferedInTrade(item_id)`
				CoreLib.Inventory.Item.IsSparkly(item_id)`
				CoreLib.Inventory.Item.IsIdentified(item_id)`
				CoreLib.Inventory.Item.IsPrefixUpgradable(item_id)`
				CoreLib.Inventory.Item.IsSuffixUpgradable(item_id)`
				CoreLib.Inventory.Item.IsStackable(item_id)`
				CoreLib.Inventory.Item.IsUsable(item_id)`
				CoreLib.Inventory.Item.IsTradable(item_id)`
				CoreLib.Inventory.Item.IsInscription(item_id)`
				CoreLib.Inventory.Item.IsRarityBlue(item_id)`
				CoreLib.Inventory.Item.IsRarityPurple(item_id)`
				CoreLib.Inventory.Item.IsRarityGreen(item_id)`
				CoreLib.Inventory.Item.IsRarityGold(item_id)`
================================================================================